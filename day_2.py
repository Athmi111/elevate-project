# -*- coding: utf-8 -*-
"""day_2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gLYpw-TTWNfrSVUCmZdQd2Lm95MeJNg6
"""

import pandas as pd

df = pd.read_csv('/content/sample_data/Titanic-Dataset.csv')
#summary statistics
print("Summary Statistics:\n")
print(df.describe())

#histograms and boxplots for numeric char
import seaborn as sns
import matplotlib.pyplot as plt

# Histograms
df.hist(figsize=(10, 6), bins=10)
plt.suptitle("Histograms of Numerical Features")
plt.tight_layout()
plt.show()

import seaborn as sns
import matplotlib.pyplot as plt


numeric_cols = df.select_dtypes(include=['float64', 'int64']).columns


df_melted = df[numeric_cols].melt(var_name='Feature', value_name='Value')

plt.figure(figsize=(12, 6))
sns.boxplot(x='Feature', y='Value', data=df_melted)
plt.title("Boxplots of Numerical Features")
plt.show()

# Pairplot: for visualizing pairwise relationships
sns.pairplot(df[numeric_cols])
plt.suptitle("Pairplot of Numerical Features", y=1.02)
plt.show()

# Correlation matrix (heatmap)
corr = df[numeric_cols].corr()
plt.figure(figsize=(8, 6))
sns.heatmap(corr, annot=True, cmap='coolwarm')
plt.title("Correlation Matrix")
plt.show()

#Identify Patterns, Trends, or Anomalies
import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd

# 1. Correlation Heatmap - pattern between numerical features
plt.figure(figsize=(10, 6))
sns.heatmap(df.corr(numeric_only=True), annot=True, cmap='coolwarm')
plt.title("Correlation Heatmap of Numerical Features")
plt.show()

# 2. Survival rate by Sex - trend
plt.figure(figsize=(6, 4))
sns.barplot(x='Sex', y='Survived', data=df)
plt.title("Survival Rate by Sex")
plt.ylabel("Survival Rate")
plt.show()

# 3. Survival rate by Passenger Class - trend
plt.figure(figsize=(6, 4))
sns.barplot(x='Pclass', y='Survived', data=df)
plt.title("Survival Rate by Passenger Class")
plt.ylabel("Survival Rate")
plt.show()

# 4. Age vs Fare Scatterplot - to detect anomalies
plt.figure(figsize=(8, 6))
sns.scatterplot(x='Age', y='Fare', hue='Survived', data=df)
plt.title("Age vs Fare with Survival Hue")
plt.show()

# 5. Boxplot for Fare to spot outliers (anomalies)
plt.figure(figsize=(6, 4))
sns.boxplot(y='Fare', data=df)
plt.title("Boxplot of Fare (Outlier Detection)")
plt.show()

#Feature-Level Inference from Visuals
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Load dataset
df = pd.read_csv('/content/sample_data/Titanic-Dataset.csv')

# Handle missing values
df['Age'] = df['Age'].fillna(df['Age'].mean())
df['Fare'] = df['Fare'].fillna(df['Fare'].mean())
df['Embarked'] = df['Embarked'].fillna(df['Embarked'].mode()[0])
df['Sex'] = df['Sex'].fillna(df['Sex'].mode()[0])


# Label Encoding categorical variables
from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
df['Sex'] = le.fit_transform(df['Sex'])  # male=1, female=0
df['Embarked'] = le.fit_transform(df['Embarked'])

# 1. Sex vs Survival
plt.figure(figsize=(6, 4))
sns.barplot(x='Sex', y='Survived', data=df)
plt.title('Survival Rate by Sex')
plt.xticks([0, 1], ['Female', 'Male'])
plt.show()

# 2. Pclass vs Survival
plt.figure(figsize=(6, 4))
sns.barplot(x='Pclass', y='Survived', data=df)
plt.title('Survival Rate by Passenger Class')
plt.show()

# 3. Fare boxplot (to check outliers)
plt.figure(figsize=(6, 4))
sns.boxplot(y='Fare', data=df)
plt.title('Boxplot of Fare')
plt.show()

# 4. Age vs Fare scatterplot with survival hue
plt.figure(figsize=(7, 5))
sns.scatterplot(x='Age', y='Fare', hue='Survived', data=df, palette='Set1')
plt.title('Age vs Fare (colored by Survival)')
plt.show()

# 5. Correlation Heatmap
plt.figure(figsize=(8, 6))
sns.heatmap(df.corr(numeric_only=True), annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap')
plt.show()