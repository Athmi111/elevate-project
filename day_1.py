# -*- coding: utf-8 -*-
"""day 1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rqug8lfeanL0IU-sBm10EbN0xg8NYu6f
"""

#import dataset
import pandas as pd
df = pd.read_csv('/content/sample_data/Titanic-Dataset.csv')
#basic info
print(df.info())
print("\nMissing values:\n", df.isnull().sum())
print("\nData types:\n", df.dtypes)
print("\nFirst 5 rows:\n", df.head())

#Handle missing values using mean/median/imputation
# Fill missing values
df['Age'].fillna(df['Age'].mean())
df['Cabin'].fillna(df['Cabin'].mode())
df['Embarked'].fillna(df['Embarked'].mode())

# Output: check for remaining nulls
print("Missing values after filling:\n")
print(df[['Age', 'Cabin', 'Embarked']].isnull().sum())

# Output: check updated values (first 5 rows)
print("\nSample values after imputation:\n")
print(df[['Age', 'Cabin', 'Embarked']].head())

#Convert categorical features into numerical using encoding
from sklearn.preprocessing import LabelEncoder

le = LabelEncoder()

# Encoding 'Sex' column
df['Sex'] = le.fit_transform(df['Sex'])
print("After encoding 'Sex':")
print(df['Sex'].head())

# Encoding 'Embarked' column
df['Embarked'] = le.fit_transform(df['Embarked'])
print("\nAfter encoding 'Embarked':")
print(df['Embarked'].head())

# Optional: view the entire DataFrame head
print("\nFirst 5 rows of the updated DataFrame:")
print(df.head())

#Normalize/standardize the numerical features
from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()

# Standardize only 'Age' and 'Fare' as example
df[['Age', 'Fare']] = scaler.fit_transform(df[['Age', 'Fare']])

# Show the first 5 rows
print(df[['Age', 'Fare']].head())

#Visualize outliers using boxplots and remove them
import seaborn as sns
import matplotlib.pyplot as plt

# Plot boxplots for numerical columns
plt.figure(figsize=(5, 5))
sns.boxplot(data=df[['Age', 'Fare']])
plt.title('Boxplot of Age and Fare')
plt.show()

# Define a function to remove outliers from a column
def remove_outliers_iqr(data, column):
    Q1 = data[column].quantile(0.25)
    Q3 = data[column].quantile(0.75)
    IQR = Q3 - Q1
    lower = Q1 - 1.5 * IQR
    upper = Q3 + 1.5 * IQR
    return data[(data[column] >= lower) & (data[column] <= upper)]

# Apply to both 'Age' and 'Fare'
df = remove_outliers_iqr(df, 'Age')
df = remove_outliers_iqr(df, 'Fare')

# Print shape and sample
print("After removing outliers, shape of dataset:", df.shape)
print(df[['Age', 'Fare']].head())