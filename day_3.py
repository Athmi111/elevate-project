# -*- coding: utf-8 -*-
"""day_3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/154yl4mAmttFMTvXZq-QUKjal7xZOgTd5
"""

#Import libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

# Load and preprocess dataset
df = pd.read_csv('/content/sample_data/california_housing_train.csv')

X = df[['median_income']]
y = df['median_house_value']

#Split data into train-test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

#Fit a Linear Regression model using sklearn.linear_model.
model = LinearRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)
#Evaluate model using MAE, MSE, R²
mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Absolute Error (MAE):", mae)
print("Mean Squared Error (MSE):", mse)
print("R² Score:", r2)
print("Intercept:", model.intercept_)
print("Coefficient:", model.coef_[0])

#Plot regression line
plot_df = X_test.copy()
plot_df['Actual'] = y_test
plot_df['Predicted'] = y_pred
plot_df = plot_df.sort_values(by='median_income')

plt.figure(figsize=(10, 6))
plt.scatter(plot_df['median_income'], plot_df['Actual'], color='blue', label='Actual')
plt.plot(plot_df['median_income'], plot_df['Predicted'], color='red', label='Regression Line')
plt.title('Linear Regression: Median Income vs House Value')
plt.xlabel('Median Income')
plt.ylabel('Median House Value')
plt.legend()
plt.grid(True)
plt.show()